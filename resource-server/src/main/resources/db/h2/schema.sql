drop table if exists account cascade;

drop table if exists account_transaction cascade;

drop table if exists authorities cascade;

drop table if exists cards cascade;

drop table if exists client cascade;

drop table if exists contact_messages cascade;

drop table if exists customer cascade;

drop table if exists loans cascade;

drop table if exists notice_details cascade;

drop table if exists owner cascade;

drop table if exists owner_roles cascade;

drop table if exists role_authorities cascade;

drop table if exists roles cascade;

drop table if exists task_run cascade;

create table account
(
    account_number bigint                                 not null,
    created_at     timestamp(6) default CURRENT_TIMESTAMP not null,
    id             bigint generated by default as identity,
    owner_id       bigint unique,
    updated_at     timestamp(6) default CURRENT_TIMESTAMP not null,
    account_type   varchar(255),
    branch_address varchar(255),
    created_by     varchar(255) default 'system'          not null,
    updated_by     varchar(255) default 'system'          not null,
    primary key (id)
);

create table account_transaction
(
    transaction_dt      date,
    account_id          bigint,
    closing_balance     bigint,
    id                  bigint generated by default as identity,
    transaction_amt     bigint,
    transaction_id      varchar(255),
    transaction_summary varchar(255),
    transaction_type    varchar(255),
    primary key (id)
);

create table authorities
(
    access_type tinyint check (access_type between 0 and 5),
    id          bigint generated by default as identity,
    name        varchar(50)  not null unique,
    expression  varchar(255),
    uri         varchar(255) not null,
    primary key (id)
);

create table cards
(
    account_id       bigint,
    amount_used      bigint,
    available_amount bigint,
    id               bigint generated by default as identity,
    total_limit      bigint,
    card_number      varchar(255),
    card_type        varchar(255),
    primary key (id)
);

create table client
(
    created_at         timestamp(6) default CURRENT_TIMESTAMP not null,
    id                 bigint generated by default as identity,
    updated_at         timestamp(6) default CURRENT_TIMESTAMP not null,
    category           varchar(255),
    created_by         varchar(255) default 'system'          not null,
    name               varchar(255),
    service_account_id varchar(255),
    updated_by         varchar(255) default 'system'          not null,
    primary key (id)
);

create table contact_messages
(
    id            bigint generated by default as identity,
    contact_email varchar(255),
    contact_id    varchar(255),
    contact_name  varchar(255),
    message       varchar(255),
    subject       varchar(255),
    primary key (id)
);

create table customer
(
    account_non_expired     boolean,
    account_non_locked      boolean,
    credentials_non_expired boolean,
    enabled                 boolean,
    created_at              timestamp(6) default CURRENT_TIMESTAMP not null,
    id                      bigint generated by default as identity,
    updated_at              timestamp(6) default CURRENT_TIMESTAMP not null,
    created_by              varchar(255) default 'system'          not null,
    email                   varchar(255),
    first_name              varchar(255),
    last_name               varchar(255),
    mobile_number           varchar(255),
    updated_by              varchar(255) default 'system'          not null,
    username                varchar(255),
    primary key (id)
);

create table loans
(
    start_dt           date,
    amount_paid        bigint,
    id                 bigint generated by default as identity,
    outstanding_amount bigint,
    owner_id           bigint,
    total_loan         bigint,
    loan_type          varchar(255),
    primary key (id)
);

create table notice_details
(
    notic_beg_dt   date,
    notic_end_dt   date,
    id             bigint generated by default as identity,
    notice_details varchar(255),
    notice_summary varchar(255),
    primary key (id)
);

create table owner
(
    privilege_level integer                                not null,
    client_id       bigint unique,
    created_at      timestamp(6) default CURRENT_TIMESTAMP not null,
    customer_id     bigint unique,
    id              bigint generated by default as identity,
    updated_at      timestamp(6) default CURRENT_TIMESTAMP not null,
    created_by      varchar(255) default 'system'          not null,
    name            varchar(255),
    type            varchar(255),
    updated_by      varchar(255) default 'system'          not null,
    uuid            varchar(255),
    primary key (id)
);

create table owner_roles
(
    owner_id bigint not null,
    role_id  bigint not null
);

create table role_authorities
(
    authority_id bigint not null,
    role_id      bigint not null
);

create table roles
(
    privilege_lvl int default 2147483647 not null,
    id            bigint generated by default as identity,
    role          varchar(50)            not null unique,
    primary key (id)
);

create table task_run
(
    id   bigint generated by default as identity,
    time timestamp(6),
    name varchar(255),
    primary key (id)
);

alter table if exists account
    add constraint FKc4c8kh7yojud2xjd1d6f6j61y
        foreign key (owner_id)
            references owner;

alter table if exists account_transaction
    add constraint FKqonh25s0w6r5cf8jq88m6kd8o
        foreign key (account_id)
            references account;

alter table if exists cards
    add constraint FKmtmvicxlcaw22koed9su9v8g6
        foreign key (account_id)
            references account;

alter table if exists loans
    add constraint FKqegx0484iabwxft8o7bto07fg
        foreign key (owner_id)
            references owner;

alter table if exists owner
    add constraint FKevpp220gx1077sx2omhkoswln
        foreign key (client_id)
            references client;

alter table if exists owner
    add constraint FK5gc1h550apg6sueas31k9xfhu
        foreign key (customer_id)
            references customer;

alter table if exists owner_roles
    add constraint FKrhiyubb8qu3iv7scpcmj7g4ar
        foreign key (owner_id)
            references owner;

alter table if exists owner_roles
    add constraint FKsi7y1047bfnqf5v2w4uuh3y6i
        foreign key (role_id)
            references roles;

alter table if exists role_authorities
    add constraint FKpmbd5d32ddnedap7prbfhwuy2
        foreign key (authority_id)
            references authorities;

alter table if exists role_authorities
    add constraint FKffl6vh23qrnrld2sxfhtjhbkm
        foreign key (role_id)
            references roles;